{"version":3,"sources":["constants.ts","App.tsx","index.tsx"],"names":["codeText","states","highlightedLine","stack","title","variables","name","value","pointingTo","heap","textContent","getStackVariableClass","section","frame","variableIndex","getArrowPointerId","guid","Block","frameIndex","Card","className","Text","as","length","map","variable","i","App","React","useState","stateIndex","setStateIndex","Math","floor","random","pow","downHandler","key","useEffect","window","addEventListener","removeEventListener","renderArrowPointers","container","d3","selectAll","empty","append","attr","style","svg","select","arrowData","forEach","undefined","push","getSourceContainer","d","node","getTargetContainer","blockIndex","blocks","nodes","getRelativeX","el","getBoundingClientRect","x","getRelativeY","y","arrows","data","enter","merge","sourceContainer","width","height","targetContainer","exit","remove","bg","codeLine","isHighlighted","rootElement","document","getElementById","render","theme"],"mappings":"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","file":"static/js/main.30eb8b46.chunk.js","sourcesContent":["export const codeText = [\r\n`class Instrument {`,\r\n`    constructor(name, type, instrumentOrigin) {`,\r\n`        this.name = name;`,\r\n`        this.type = type;`,\r\n`        this.instrumentOrigin = instrumentOrigin;`,\r\n`    }`,\r\n`}`,\r\n``,  \r\n`let mbira = new Instrument(\"Mbira\", \"Lamellophone\", \"Zimbabwe\");`];\r\n  \r\nexport const state0 = {\r\n    highlightedLine: 6,\r\n    stack: [\r\n        {\r\n            title: 'Global frame',\r\n            variables: [\r\n                {\r\n                    name: 'Instrument',\r\n                    value: null,\r\n                    pointingTo: \"0\"\r\n                },\r\n                {\r\n                    name: 'mbira',\r\n                    value: null,\r\n                    pointingTo: \"0\"\r\n                } \r\n            ]\r\n        }\r\n    ],\r\n    heap: [\r\n        {\r\n            title: 'Class',\r\n            textContent: 'Instrument {...}'\r\n        }\r\n    ]\r\n};\r\n  \r\nexport const state1 = {\r\n    \"highlightedLine\": 7,\r\n    \"stack\":[\r\n        {\r\n            \"title\":\"Global frame\",\r\n            \"variables\":[\r\n                {\r\n                    \"name\":\"Instrument\",\r\n                    \"pointingTo\":0,\r\n                },\r\n                {\r\n                    \"name\":\"mbira\",\r\n                    \"value\":null,\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"title\":\"Instrument: new\",\r\n            \"variables\":[\r\n                {\r\n                    \"name\":\"this\",\r\n                    \"pointingTo\":1\r\n                },\r\n                {\r\n                    \"name\":\"name\",\r\n                    \"value\":\"Mbira\"\r\n                },\r\n                {\r\n                    \"name\":\"type\",\r\n                    \"value\":\"Lamellophone\"\r\n                },\r\n                {\r\n                    \"name\":\"instrumentOrigin\",\r\n                    \"value\":\"Zimbabwe\"\r\n                }\r\n            ]\r\n        }\r\n        ],\r\n        \"heap\":[\r\n        {\r\n            \"title\":\"Class\",\r\n            \"textContent\":\"Instrument {...}\"\r\n        },\r\n        {\r\n            \"title\":\"Object\"\r\n        }\r\n        ]\r\n};\r\n\r\nexport const state2 = {\r\n    \"highlightedLine\": 8,\r\n    \"stack\":[\r\n        {\r\n            \"title\":\"Global frame\",\r\n            \"variables\":[\r\n                {\r\n                    \"name\":\"Instrument\",\r\n                    \"pointingTo\":0,\r\n                },\r\n                {\r\n                    \"name\":\"mbira\",\r\n                    \"pointingTo\":1,\r\n                }\r\n            ]\r\n        },\r\n    ],\r\n    \"heap\":[\r\n       {\r\n          \"title\":\"Class\",\r\n          \"textContent\":\"Instrument {...}\"\r\n       },\r\n        {\r\n            \"title\":\"Object\",\r\n            \"variables\":[\r\n                {\r\n                    \"name\":\"name\",\r\n                    \"value\":\"Mbira\"\r\n                },\r\n                {\r\n                    \"name\":\"type\",\r\n                    \"value\":\"Lamellophone\"\r\n                },\r\n                {\r\n                    \"name\":\"instrumentOrigin\",\r\n                    \"value\":\"Zimbabwe\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};","import React, { useCallback, useEffect } from 'react';\nimport './App.css';\nimport { Background } from '@codecademy/gamut-styles';\nimport { Text, Card } from '@codecademy/gamut';\nimport * as d3 from \"d3\";\nimport { codeText, state0, state1, state2 } from './constants';\n\nconst states = [{...state0}, {...state1}, {...state2}];\n\nconst getStackVariableClass = (section, frame, variableIndex) => {\n  return `${section}_${frame}_${variableIndex}`;\n}\n\nconst getGuid = () => {\n  return `id${Math.floor(Math.random() * Math.pow(10, 10))}`;\n}\n\nconst getArrowPointerId = (guid) => {\n  return `arrowPointer${guid}`;\n}\n\nfunction App() {\n  const [stateIndex, setStateIndex] = React.useState(0);\n  const [guid, setGuid] = React.useState(getGuid());\n\n  const downHandler = ({ key }) => {\n    if (key === \"ArrowRight\" && stateIndex < (states.length - 1)) {\n      setStateIndex(stateIndex + 1);\n    }\n    if (key === \"ArrowLeft\" && stateIndex > 0) {\n      setStateIndex(stateIndex - 1);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n    };\n  }, [stateIndex]);\n\n  const renderArrowPointers = () => {\n    const container = d3.select(`.${guid}`);\n    if (container.selectAll('svg').empty()) {\n      container.append('svg')\n        .attr('class', 'arrowOverlay')\n        .append(\"svg:defs\").append(\"svg:marker\")\n        .attr(\"id\", getArrowPointerId(guid))\n        .attr(\"refX\", 12)\n        .attr(\"refY\", 6)\n        .attr(\"markerWidth\", 20)\n        .attr(\"markerHeight\", 20)\n        .attr(\"orient\", \"auto\")\n        .append(\"path\")\n        .attr(\"d\", \"M 0 0 12 6 0 12 3 6\")\n        .style(\"fill\", \"red\");    \n    }\n\n    const svg = container.select('.arrowOverlay')\n      .attr('left', '0px')\n      .attr('top', '0px')\n      .attr('width', '100%')\n      .attr('height', '100%');\n\n    const arrowData: [string, string][] = [];\n    states[stateIndex].stack.forEach((frame, frameIndex) => {\n      frame.variables?.forEach((variable, variableIndex) => {\n        if (variable['pointingTo'] !== undefined) {\n          arrowData.push([getStackVariableClass('stack', frameIndex, variableIndex), variable['pointingTo']]);\n        }\n      });\n    });\n\n    const getSourceContainer = (d) => {\n      const className = d[0];\n      return container.select(`.${className}`).node();\n    }\n    const getTargetContainer = (d) => {\n      const blockIndex = d[1];\n      const blocks = container.select('.jssh-heapCollection').selectAll('.jssh-block');\n      return blocks?.nodes()[blockIndex];\n    }\n\n    // from an element, find its relative x or y position compared to its container\n    const getRelativeX = (el) => {\n      return el.getBoundingClientRect().x - container.node().getBoundingClientRect().x;\n    }\n    const getRelativeY = (el) => {\n      return el.getBoundingClientRect().y - container.node().getBoundingClientRect().y;\n    }\n\n    const arrows = svg.selectAll('.jssh-pointerArrow')\n      .data(arrowData, function (d) { return d[0]; });\n    arrows.enter()\n      .append('line')\n      .attr('class', 'jssh-pointerArrow')\n      .merge(arrows)\n      .attr('x1', (d) => {\n        const sourceContainer = getSourceContainer(d);\n        const leftBoundary = getRelativeX(sourceContainer);\n        return leftBoundary + (sourceContainer.getBoundingClientRect().width / 2);\n      })\n      .attr('y1', (d) => {\n        const sourceContainer = getSourceContainer(d);\n        const topBoundary = getRelativeY(sourceContainer);\n        return topBoundary + (sourceContainer.getBoundingClientRect().height / 2);\n      })\n      .attr('x2', (d) => {\n        const targetContainer = getTargetContainer(d);\n        const leftBoundary = getRelativeX(targetContainer);\n        return leftBoundary;\n      })\n      .attr('y2', (d) => {\n        const targetContainer = getTargetContainer(d);\n        const topBoundary = getRelativeY(targetContainer);\n        return topBoundary + (targetContainer.getBoundingClientRect().height / 2);\n      })\n      .attr(\"marker-end\", `url(#${getArrowPointerId(guid)})`);\n\n    arrows.exit().remove();\n  }\n\n  React.useEffect(() => {\n    renderArrowPointers();\n  }, [stateIndex]);\n\n  React.useEffect(() => {\n    window.addEventListener('resize', renderArrowPointers);\n    return () => {\n      window.removeEventListener('resize', renderArrowPointers);\n    };\n  }, []);\n\n  return (<>\n    <div className={`jssh-container ${guid}`}>\n      <div className='jssh-sectionOuter'>\n        <Background bg=\"beige\" className='jssh-section'>\n          <Text as=\"h3\">Code</Text>\n          <Card className='jssh-block'>\n            <pre>\n              <code>\n                {codeText.map((codeLine, i) => {\n                  const isHighlighted = states[stateIndex]?.highlightedLine === i;\n                    return <div key={i} className={`jssh-codeLine${i}`}>\n                      <span className={`jssh-lineNumber${isHighlighted ? ' jssh-highlightedLine': ''}`}>\n                        {i + 1}\n                      </span>\n                      <span>{codeLine}</span>\n                    </div>;\n                })}\n              </code>\n            </pre>\n          </Card>\n        </Background>\n      </div>\n      <div className='jssh-sectionOuter'>\n        <Background bg=\"beige\" className='jssh-section'>\n          <Text as=\"h3\">Stack</Text>\n          <div className='jssh-blockContainer'>\n            {states[stateIndex].stack.map((frame, i) => (\n              <Block frame={frame} key={i} frameIndex={i} section='stack'/>\n            ))}\n          </div>\n        </Background>\n      </div>\n      <div className='jssh-sectionOuter'>\n        <Background bg=\"beige\" className='jssh-section'>\n          <Text as=\"h3\">Heap</Text>\n          <div className='jssh-blockContainer jssh-heapCollection'>\n            {states[stateIndex].heap.map((frame, i) => (\n              <Block frame={frame} key={i} frameIndex={i} section='heap'/>\n            ))}\n          </div>\n        </Background>\n      </div>\n    </div>\n  </>);\n};\n\nconst Block = ({frame, frameIndex, section}) => {\n  return (<Card className='jssh-block'>\n    <Text as='h4'>{frame.title}</Text>\n    {frame.textContent && <Text as='h5'>\n      {frame.textContent}  \n    </Text>}\n    {frame.variables?.length && <table className='jssh-table'>\n      <tbody>\n        {frame.variables.map((variable, i) => (<tr key={i}>\n          <td>{variable.name}</td>\n          <td className={getStackVariableClass(section, frameIndex, i)}>{variable.value && variable.value}</td>\n        </tr>))}\n      </tbody>\n    </table>}\n  </Card>);\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { GamutProvider, theme } from '@codecademy/gamut-styles';\nimport './index.css';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\n\nrender(\n  <GamutProvider theme={theme}>\n    <App />\n  </GamutProvider>,\n  rootElement\n);"],"sourceRoot":""}
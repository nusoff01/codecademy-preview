{"version":3,"sources":["webpack://node_modules/@codecademy/gamut/dist/Typography/styles/Heading.module.scss","webpack://node_modules/@codecademy/gamut-styles/utils/variables/_typography.scss","webpack://node_modules/@codecademy/gamut-styles/utils/mixins/_responsive.scss","webpack://node_modules/@codecademy/gamut/dist/Typography/styles/Text.module.scss"],"names":[],"mappings":"AAEA,wBACE,eCiBiB,CDhBjB,gBAAA,CAMI,iCACE,cAEA,CAHF,iEAEE,mJAAA,CACA,kBAAA,CAHF,gCACE,iBAEA,CAHF,gCACE,kBAAA,CAEA,kBAAA,CAHF,gEAEE,mJACA,CAHF,gCACE,kBAAA,CAEA,qBAAA,CAHF,gCACE,kBAEA,CAHF,gEAEE,mJAAA,CACA,oBAAA,CAHF,gCACE,iBAEA,CAHF,iCACE,cAAA,CACA,mJAAA,CACA,kBAAA,CAAA,yCAHF,iCACE,cAEA,CAHF,iEAEE,mJAAA,CACA,kBAAA,CAHF,gCACE,iBAEA,CAHF,gCACE,kBAAA,CAEA,kBAAA,CAHF,gEAEE,mJACA,CAHF,gCACE,kBAAA,CAEA,qBAAA,CAHF,gCACE,kBAEA,CAHF,gEAEE,mJAAA,CACA,oBAAA,CAHF,gCACE,iBAEA,CAHF,iCACE,cAAA,CACA,mJAAA,CACA,kBAAA,CAAA,CEMN,yCFTI,iCACE,cAEA,CAHF,iEAEE,mJAAA,CACA,kBAAA,CAHF,gCACE,iBAEA,CAHF,gCACE,kBAAA,CAEA,kBAAA,CAHF,gEAEE,mJACA,CAHF,gCACE,kBAAA,CAEA,qBAAA,CAHF,gCACE,kBAEA,CAHF,gEAEE,mJAAA,CACA,oBAAA,CAHF,gCACE,iBAEA,CAHF,iCACE,cAAA,CACA,mJAAA,CACA,kBAAA,CAAA,CEYN,yCFfI,iCACE,cAEA,CAHF,iEAEE,mJAAA,CACA,kBAAA,CAHF,gCACE,iBAEA,CAHF,gCACE,kBAAA,CAEA,kBAAA,CAHF,gEAEE,mJACA,CAHF,gCACE,kBAAA,CAEA,qBAAA,CAHF,gCACE,kBAEA,CAHF,gEAEE,mJAAA,CACA,oBAAA,CAHF,gCACE,iBAEA,CAHF,iCACE,cAAA,CACA,mJAAA,CACA,kBAAA,CAAA,CEkBN,yCFrBI,iCACE,cAEA,CAHF,iEAEE,mJAAA,CACA,kBAAA,CAHF,gCACE,iBAEA,CAHF,gCACE,kBAAA,CAEA,kBAAA,CAHF,gEAEE,mJACA,CAHF,gCACE,kBAAA,CAEA,qBAAA,CAHF,gCACE,kBAEA,CAHF,gEAEE,mJAAA,CACA,oBAAA,CAHF,gCACE,iBAEA,CAHF,iCACE,cAAA,CACA,mJAAA,CACA,kBAAA,CAAA,CGXR,6CACE,QAAA,CAMI,6BACE,iBACA,CAFF,0DAEE,mJAAA,CAFF,6BACE,cACA,CAFF,6BACE,iBAAA,CACA,mJAAA,CDEN,yCCJI,6BACE,iBACA,CAFF,0DAEE,mJAAA,CAFF,6BACE,cACA,CAFF,6BACE,iBAAA,CACA,mJAAA,CAAA,CDQN,yCCVI,6BACE,iBACA,CAFF,0DAEE,mJAAA,CAFF,6BACE,cACA,CAFF,6BACE,iBAAA,CACA,mJAAA,CAAA,CDcN,yCChBI,6BACE,iBACA,CAFF,0DAEE,mJAAA,CAFF,6BACE,cACA,CAFF,6BACE,iBAAA,CACA,mJAAA,CAAA,CDoBN,yCCtBI,6BACE,iBACA,CAFF,0DAEE,mJAAA,CAFF,6BACE,cACA,CAFF,6BACE,iBAAA,CACA,mJAAA,CAAA","file":"2.d3734882.chunk.css","sourcesContent":["@import \"variables\";\n\n.heading {\n  font-weight: $font-weight-headings;\n  line-height: 1.25;\n}\n\n@each $screenSize in $screenSizes {\n  @include getViewport($screenSize) {\n    @each $size, $map in $headingSizes {\n      .fontSize_#{$size}__#{$screenSize} {\n        font-size: px-rem(map-get($map, size));\n        font-family: map-get($map, font);\n        margin-bottom: px-rem(map-get($map, margin));\n      }\n    }\n  }\n}\n\n.hideMargin {\n  margin: 0;\n}\n","// Font Families:\n\n$font-family-accent: \"Suisse\", \"Apercu\", -apple-system, BlinkMacSystemFont,\n  \"Segoe UI\", \"Roboto\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n  \"Helvetica Neue\", sans-serif;\n\n$font-family-base: \"Apercu\", -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n  \"Roboto\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n  sans-serif;\n\n$font-monospace: Monaco, Menlo, \"Ubuntu Mono\", \"Droid Sans Mono\", Consolas,\n  monospace;\n\n$font-system: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Ubuntu\",\n  \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n\n// Font Weights\n\n$font-weight-light: 300;\n$font-weight-normal: normal;\n$font-weight-bold: bold;\n$font-weight-base: $font-weight-normal;\n$font-weight-headings: $font-weight-bold;\n$font-weight-dt: $font-weight-bold;\n\n// Font colors\n\n$color-body: $color-navy;\n$color-headings: $color-gray-900;\n$bg-body: $color-white;\n$color-link: $deprecated-gamut-royal-blue-500;\n$hover-color-link: $deprecated-gamut-royal-blue-600;\n$decoration-link: none;\n$hover-decoration-link: underline;\n\n// Font margins\n\n$margin-bottom-paragraph: $spacer;\n$margin-bottom-headings: $spacer;\n$margin-bottom-label: 0;\n$line-height-base: 1.5;\n$line-height-headings: 1.1;\n\n// Font sizes\n\n$font-size-base: $base-unit;\n$font-size-h1: px-rem(64);\n$font-size-h2: px-rem(44);\n$font-size-h3: px-rem(34);\n$font-size-h4: px-rem(26);\n$font-size-h5: px-rem(22);\n$font-size-h6: px-rem(20);\n$font-size-small: 85%;\n","// Try to use these simple mixins if possible for your responsive needs\n\n// Example usage:\n//\n// .grid {\n//  display: flex;\n//  flex-direction: column;\n//  @include md-viewport {\n//    flex-direction: row;\n//  }\n// }\n\n@mixin sm-viewport {\n  @media only screen and (min-width: $grid-sm-min) {\n    @content;\n  }\n}\n\n@mixin md-viewport {\n  @media only screen and (min-width: $grid-md-min) {\n    @content;\n  }\n}\n\n@mixin lg-viewport {\n  @media only screen and (min-width: $grid-lg-min) {\n    @content;\n  }\n}\n\n@mixin xl-viewport {\n  @media only screen and (min-width: $grid-xl-min) {\n    @content;\n  }\n}\n\n// Media query abstractions if you need more complex responsive behavior\n// or custom breakpoints\n\n@mixin screen-size-lte($max) {\n  @media screen and (max-width: $max) {\n    @content;\n  }\n}\n\n@mixin screen-size-between($min, $max) {\n  @media screen and (min-width: $min) and (max-width: $max) {\n    @content;\n  }\n}\n\n@mixin screen-size-gte($min) {\n  @media screen and (min-width: $min) {\n    @content;\n  }\n}\n\n// Named view port mixin\n\n@mixin getViewport($viewport) {\n  @if $viewport == \"xl\" {\n    @include xl-viewport() {\n      @content;\n    }\n  }\n  @if $viewport == \"lg\" {\n    @include lg-viewport {\n      @content;\n    }\n  }\n  @if $viewport == \"md\" {\n    @include md-viewport {\n      @content;\n    }\n  }\n  @if $viewport == \"sm\" {\n    @include sm-viewport {\n      @content;\n    }\n  }\n  @if $viewport == \"xs\" {\n    @content;\n  }\n}\n","@import \"variables\";\n\n.text {\n  margin: 0;\n}\n\n@each $screenSize in $screenSizes {\n  @include getViewport($screenSize) {\n    @each $size, $map in $textSizes {\n      .fontSize_#{$size}__#{$screenSize} {\n        font-size: px-rem(map-get($map, size));\n        font-family: map-get($map, font);\n      }\n    }\n  }\n}\n"]}